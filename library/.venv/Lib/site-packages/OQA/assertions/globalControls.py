from typing import Literal
from .. import __config


__JiraConfig = __config["Jira"]     #getConfig().get("Jira")
__jiraCreateModeFromConfig =  __JiraConfig.get("createJiraTicketMode") if __JiraConfig else "aggregateFaliures"

__HardFaliure = False
__ScreenShotOnSuccess = False
__createJiraTicket = False

__JiraTicketCreateModes = ["perFaliure", "aggregateFaliures"]
__createModesType = Literal["perFaliure", "aggregateFaliures"]
__JiraTicketCreateMode = "aggregateFaliures"


def setHardFaliureAs(boolInput:bool):
    if not isinstance(boolInput,bool):
        return

    global __HardFaliure
    __HardFaliure = boolInput

def setScreenShotOnSuccessAs(boolInput:bool):
    if not isinstance(boolInput,bool):
        return
    
    global __ScreenShotOnSuccess
    __ScreenShotOnSuccess = boolInput

def setCreateJiraTicketOnFaliureAs(boolInput:bool):
     if not isinstance(boolInput,bool): 
         return
     
     global __createJiraTicket
     __createJiraTicket = boolInput

def setCreateJiraTicketMode(input:__createModesType):
    global __JiraTicketCreateMode
    global __JiraTicketCreateModes
    
    if input not in __JiraTicketCreateModes:
        print(f"{input} mode doesn't exists.")
        return
    
    __JiraTicketCreateMode = input

setCreateJiraTicketMode(__jiraCreateModeFromConfig)