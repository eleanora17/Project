from PIL import Image, ImageChops
import os
import datetime
from .. import __exe_logger


def ImageDiff(outputImgPath,expectedImgPath, saveDifferenceImageTo=""):

    output = Image.open(outputImgPath)
    expected = Image.open(expectedImgPath)

    if output.width != expected.width or output.height != expected.height:
        __exe_logger.warning(f"Image diffing could not be performed. Dimensions of Images aren't the same. Output resolution:{output.width}x{output.height}, Expected Resolution: {expected.width}x{expected.height}")
        return {
                "error": True,
                "outputResolution": f"{output.width}x{output.height}",
                "expectedResolution": f"{expected.width}x{expected.height}",
                "totalPixels": 0,
                "totalDifferentPixels": 0,
                "percentageOfDifferentPixels": 0,
                "filePath": ""
            }

    #converting to RGB because ImageChops cant diff with an alpha channel
    outputAsRGB = output.convert("RGB")
    expectedAsRGB = expected.convert("RGB")

    diff = ImageChops.difference(expectedAsRGB, outputAsRGB)
    
    #some pixels may have a very minor difference hence the treshold
    threshold = 50
    diff = diff.point(lambda x: 0 if x < threshold else 255)

    differentPixels = 0
    imgDataForOverlay = []

    for pixel in diff.getdata():
        #if not a black pixel
        if pixel != (0,0,0): 
            differentPixels+=1
            imgDataForOverlay.append((255,0,0,255)) #append red with full opacity
        else:
            imgDataForOverlay.append((255,255,255,128)) #append white with 50-ish % oppacity. Can't really get half of 255 right? :)


    filePath=""

    #only we have some diffrences then we shall create the diffed imaged and save it
    if(differentPixels != 0):

        diffImage = Image.new(output.mode,output.size)
        diffImage.putdata(imgDataForOverlay)

        final = Image.alpha_composite(output, diffImage)

        filePath = "\\ImageDifference_" + str(datetime.datetime.now().strftime("%Y_%m_%d_%H_%M_%S")) + ".png"
        if(saveDifferenceImageTo == ""): 
            filePath = os.getcwd() + filePath
            final.save(filePath)
        else: 
            filePath = saveDifferenceImageTo+filePath
            final.save(filePath)

    
    totalPixels = diff.width * diff.height
    percentageOfDifference = (differentPixels/totalPixels) * 100

    return {
        "error": False,
        "outputResolution": f"{output.width}x{output.height}",
        "expectedResolution": f"{expected.width}x{expected.height}",
        "totalPixels": totalPixels,
        "totalDifferentPixels": differentPixels,
        "percentageOfDifferentPixels": percentageOfDifference,
        "filePath": filePath
    }