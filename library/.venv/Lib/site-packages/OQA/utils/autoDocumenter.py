import os
import re
import json

def __formatString(inputStr:str):
    inputStr = inputStr.strip()
    inputStr = re.sub(pattern=r"@\w+", string=inputStr, repl="")
    inputStr = inputStr.replace("("," ").replace(")","")
    inputStr = inputStr.replace("{","<").replace("}",">")
    inputStr = inputStr.lstrip().rstrip()
    return inputStr

# specifying no output directory will save at the same path the executing python file is
def generateStepsCatalogueFromDirectory(input_dir_path, output_dir_path = ""):
    
    if not os.path.exists(input_dir_path):
        print("Invalid Input Directory")
        return
    
    if not os.path.exists(output_dir_path) and output_dir_path!="":
        print("Invalid Output Directory")
        return
    
    decoratorPattern = re.compile(r'^#*@[\w]+\([^)]*\)', re.MULTILINE)
    catalogueJson = {}

    input_dir_path = os.path.normpath(input_dir_path)
    output_dir_path = os.path.normpath(output_dir_path)

    for (root,dirs,files) in os.walk(input_dir_path):
        for file in files:
            if file.endswith(".py"):
                currentFile = open(f"{os.path.normpath(root)}/"+file,"r")
                content = currentFile.read()

                for occurance in decoratorPattern.findall(content):
                    formattedStr = __formatString(occurance)
                    if(file.split('.')[0] in catalogueJson):
                        catalogueJson[file.split('.')[0]] += [formattedStr]
                    else:
                        catalogueJson[file.split('.')[0]] = [formattedStr]

                currentFile.close()
    
    jsonFile = open(output_dir_path + "/featuresCatalogue.json", "w")
    jsonFile.write(json.dumps(catalogueJson))
    jsonFile.close()
