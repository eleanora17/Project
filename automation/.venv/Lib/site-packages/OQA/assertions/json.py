import deepdiff
import assertions.__base as __base
import assertions.globalControls as globalControls

def assertJsonEquals(output,expected, title, hardFaliure=None, createJiraTicket=None):
    if hardFaliure is None:
        hardFaliure = globalControls.__HardFaliure
    
    if createJiraTicket is None:
        createJiraTicket = globalControls.__createJiraTicket
    
    if not isinstance(output, type(expected)): return __base.raiseNonMatchingTypesError(output,expected, hardFaliure, title)
    
    jsonDiff = deepdiff.DeepDiff(expected,output, ignore_order=True).pretty()
    jsonDiff = jsonDiff.replace("Item", "Key").replace("[",".").replace("'","").replace("]","").lstrip(".")
    jsonDiff = jsonDiff.replace("added to dictionary", "is additional in output")
    jsonDiff = jsonDiff.replace("removed from dictionary", "is missing from expected")
    jsonDiff = jsonDiff.replace("changed from", "expected")
    jsonDiff = jsonDiff.replace("to", "got")

    if len(jsonDiff) != 0 : return __base.raiseAssertionError(title,f"The objects are different:\n{jsonDiff}", output, expected,hardFaliure , createJiraTicket)
    
    __base.logSuccess(title,"",output,expected,hardFaliure)
    return True