from opcua import Client, Node

# Globle variables
__opcua_client = None
__root_node = None

def connect_opcua(server: str, port: int = 4840, prefix: str = "opc.tcp://", timeout: int = 5):
    global  __opcua_client
    location = f"{prefix}{server}:{port}"

    print(f"Connecting to {location}")
    __opcua_client = Client(location, timeout)
    try:
        __opcua_client.connect()
        print(f"Connected to OPC UA server {location}.")
        __object_nodes()
    except Exception as e:
        print(f"Unable to connect to OPC UA server {location}. Error: {e}")
        disconnect_opcua() 

def disconnect_opcua():
    global __opcua_client
    if __opcua_client is not None:
        __opcua_client.disconnect()
        __opcua_client = None
        print("Disconnected from OPC UA server.")

def __object_nodes():
    global  __root_node
    __root_node = __opcua_client.get_objects_node()

def get_childs_of(name:str, parent_node:Node=None):
    if parent_node is not None:
        child_node = parent_node.get_child(name)
    else:
        child_node = __root_node.get_child(name)
    data = {}
    if child_node is not None:
        print(f"Listing childrens of '{name}':")
        for child in child_node.get_children():
            data[child.get_browse_name().Name] = child
            print(f" - {child.get_browse_name().Name} {child}")
        print()
        return data
    print(f"No Child Found")
